---
- hosts: localhost
  vars:
    - keydir: /etc/defaults/chefserver/keys
  # You need to edit these values before running the setup script tasks.
  # TODO: move this to ansible vault
  #  - username: jdoe
  #  - userfirst: J
  #  - userlast: Doe
  #  - useremail: jdoe@example.com
  #  - userpass: 'pass1234'
  #  - orgname: example
  #  - orgdisplayname: 'Example Company'

  tasks:
    - name: Ensure we have a default place to store keys
      file:
        path: "{{ keydir }}"
        owner: root
        group: root
        state: directory
        mode: 0700
      become: yes
    - name: Ensure chef-server-ctl reconfigure has been run at least once
      command: chef-server-ctl reconfigure
      become: yes
    - name: Ensure initial user has been created
      command: chef-server-ctl user-create {{ username }} {{ userfirst }} {{ userlast }} {{ useremail }} '{{ userpass }}' --filename {{ keydir }}/{{ username }}.pem
      become: yes
    - name: Ensure initial org has been created
      command: chef-server-ctl org-create {{ orgname }} '{{ orgdisplayname }}' --association_user {{ username }} --filename {{ keydir }}/{{ orgname }}-validator.pem
      become: yes
    - name: Ensure chef-manage is installed
      command: chef-server-ctl install chef-manage
      become: yes
    - name: Ensure chef-server-ctl reconfigure is run after installing new features
      command: chef-server-ctl reconfigure
      become: yes
    - name: Ensure chef-manage-ctl reconfigure is run after installation
      command: chef-manage-ctl reconfigure --accept-license
      become: yes
    - name: Ensure opscode-push-jobs-server is installed
      command: chef-server-ctl install opscode-push-jobs-server
      become: yes
    - name: Ensure chef-server-ctl reconfigure is run after installing new features
      command: chef-server-ctl reconfigure
      become: yes
    - name: Ensure chef-manage-ctl reconfigure is run after installation
      command: opscode-push-jobs-server-ctl reconfigure
      become: yes
    - name: Ensure firewall permits https traffic
      firewalld:
        service: https
        state: enabled
        immediate: yes
        permanent: yes
      become: yes

