---
- name: Ensure chefdk package is installed
  yum:
    name: chefdk
    state: present
  become: yes
- name: Check for playbook vars file
  stat:
    path: "{{ ansible_user_dir }}/centiso/ansible/roles/chefworkstation/vars/main.yml"
  register: varsfile
- name: Ensure this playbook has been configured
  fail:
    msg: "You need to copy roles/chefworkstation/vars/main.yml.example to roles/chefworkstation/vars/main.yml and edit the values for your specific site."
  when: varsfile is defined and not varsfile.stat.exists
- name: Ensure this chef_repo is defined
  fail:
    msg: "chef_repo needs to be configured in roles/chefworkstation/vars/main.yml."
  when: varsfile is defined and chef_repo is not defined
- name: Ensure {{ chef_repo }} is configured
  command: chef generate app {{ chef_repo }}
  args:
    chdir: "{{ ansible_user_dir }}"
    creates: "{{ ansible_user_dir }}/{{ chef_repo }}"
- name: Ensure configuration directory is not checked into git
  lineinfile:
    path: "{{ ansible_user_dir }}/{{ chef_repo }}/.gitignore"
    line: '.chef'
- name: Ensure configuration directory exists
  file:
    path: "{{ ansible_user_dir }}/{{ chef_repo }}/.chef"
    state: directory
- name: Ensure knife.rb is configured
  template:
    dest: "{{ ansible_user_dir }}/{{ chef_repo }}/.chef/knife.rb"
    src: knife.rb.js
- name: Ensure chekdk bin directory is in the path
  lineinfile:
    path: "{{ ansible_user_dir }}/.bash_profile"
    line: 'PATH=$PATH:/opt/chefdk/embedded/bin'
    insertbefore: '^export PATH'
- name: Ensure chefserver cert is trusted
  shell: cd {{ ansible_user_dir }}/{{ chef_repo }} && knife ssl fetch
